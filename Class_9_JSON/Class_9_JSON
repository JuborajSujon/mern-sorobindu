# == JSON Data

- JSON stands for JavaScript Object Notation
- The lightweight data interchange format
- Language independent
- Easy to understand and self-describing
- JSON is a text format for storing and transporting data
- JSON helps to convert array and object data to a string format for devs friendly data use.
- JSON server for apps

# == Declare a JSON

- It looks like an object
- Data is named / value pairs
- Data is separated by a comma
- Curly braces hold the object
- Square brackets hold arrays

{
"name1" : "value1",
"name2" : "value2"
}

# == JSON data types

- string
- Number
- Object
- Array
- Boolean
- Null

# == JSON values cannot be one of the following types

- function
- date
- undefined

# == JSON.parse()

- To convert JSON data string to object
- To convert an array string to an array

# == JSON.stringify()

- To convert object to JSON
- To convert array to JSON

# == JSON file

we have to create a JSON file by setting.json

# == Local Storage

- Browser storage for temporary data
- send data to LS -> localStorage.setItem(key, value)
- get data from LS -> localStorage.getItem(key)
- remove data from LS -> localStorage.removeItem(key)
- clear data from LS -> localStorage.clear()

# == Error Handling

- To Handle error in a custom way
- Prevent apps crashing for an error

# == Try Catch Finally

- try
- catch
- throw
- finally

try {
// Block of code to try
} catch (error) {
// Block of code to handle errors
} finally {
// Block of code to execute no matter what try / catch / throw does
}
